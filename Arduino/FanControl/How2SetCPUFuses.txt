####################################################
# How to set the ATtiny fuses with the Arduino IDE #
####################################################

For this project you need to install a board file to give the IDE knowledge about the ATtiny.
Here you can find it: https://github.com/SpenceKonde/ATTinyCore

You can program the ATtiny by ISP. I use here an Atmel ICE in ISP mode, but also an Arduino Uno is handy to program this ÂµController.

To set the CPU frequency to 8MHz with the Arduino IDE, you need to start to burn a bootloader.
This doesn't burn a bootloader in reality, but sets the needed fuses on the Tiny.

Set the fuses:
----------------------------------------------------
Start the Arduino IDE.

Use the following settings (e.g. for a ATtiny85):

1. Select board					: ATtiny25/45/85
2. Select chip					: ATtiny85
3. Select clock					: 8 MHz internal
4. B.O.D. level					: B.O.D. disabled
5. Save EEPROM					: EEPROM retained
6. Timer 1 clock				: CPU
7. LTO						: enabled
8. millis()/micros()    			: enabled

Execute the menu item Tools / Burn Bootloader.
----------------------------------------------------

This changes the fuses so the processor runs at 8 MHz using the internal oscillator.
It's also a handy way of "erasing" the processor when switching between projects.
